function [palasPM,palasWeather] = saveGrimmDaily(filename)
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /media/teamlary/Team_Lary_1/gitGubRepos/Lakitha/mintsDataAnalysis/Spectrometor_2019-02-12-M.dat
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2019/02/12 18:41:58

%% Initialize variables.
% filename = '/media/teamlary/Team_Lary_1/gitGubRepos/Lakitha/mintsDataAnalysis/Spectrometor_2019-02-12-M.dat';
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /media/teamlary/Team_Lary_1/gitGubRepos/Lakitha/mintsDataAnalysis/palasFrog/autostart_1_09900_2019-8-4.txt
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2019/04/09 17:27:29

%% Initialize variables.
% filename = '/media/teamlary/Team_Lary_1/gitGubRepos/Lakitha/mintsDataAnalysis/palasFrog/autostart_1_09900_2019-8-4.txt';
delimiter = '\t';
startRow = 15;

%% Format for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: text (%s)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%f%f%f%f%f%f%s%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
textscan(fileID, '%[^\n\r]', startRow-1, 'WhiteSpace', '', 'ReturnOnError', false, 'EndOfLine', '\r\n');
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'ReturnOnError', false);

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
palasAll = table(dataArray{1:end-1}, 'VariableNames', {'timestamp','pm1Palas','pm2_5Palas','pm4Palas','pm10Palas','pmTotalPalas','dCnPalas','latitudePalas','longitudePalas','dateTime1','temperaturePalas','humidityPalas','pressurehPalas'});


palasPM      = rmmissing(palasAll(:,1:7));
palasWeather = rmmissing(palasAll(:,10:end));

palasPM.Properties.VariableNames(1)=  {'dateTime'};
palasWeather.Properties.VariableNames(1)=  {'dateTime'};


palasPM.dateTime =  datetime(table2array(palasPM(:,1)),'InputFormat','MM/dd/yyyy - h:mm:ss a','TimeZone','UTC');
palasWeather.dateTime =  datetime(table2array(palasWeather(:,1)),'InputFormat','MM/dd/yyyy - h:mm:ss a','TimeZone','UTC');

palasWeather(palasWeather.temperaturePalas<-40,:) = [];


%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
end

