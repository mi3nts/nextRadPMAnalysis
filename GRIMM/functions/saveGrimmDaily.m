function grimmData = saveGrimmDaily(filename)
%% Import data from text file.
% Script for importing data from the following text file:
%
%    /media/teamlary/Team_Lary_1/gitGubRepos/Lakitha/mintsDataAnalysis/Spectrometor_2019-02-12-M.dat
%
% To extend the code to different selected data or a different text file,
% generate a function instead of a script.

% Auto-generated by MATLAB on 2019/02/12 18:41:58

%% Initialize variables.
% filename = '/media/teamlary/Team_Lary_1/gitGubRepos/Lakitha/mintsDataAnalysis/Spectrometor_2019-02-12-M.dat';




delimiter = '\t';
startRow = 14;

%% Format for each line of text:
%   column1: text (%s)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to the format.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, 'Delimiter', delimiter, 'TextType', 'string', 'EmptyValue', NaN, 'HeaderLines' ,startRow-1, 'ReturnOnError', false, 'EndOfLine', '\r\n');

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
grimmData = table(dataArray{1:end-1}, 'VariableNames', {'Header','VarName2','VarName3','VarName4','VarName5','VarName6','VarName7'});

%% Clear temporary variables
clearvars filename delimiter startRow formatSpec fileID dataArray ans;
end

